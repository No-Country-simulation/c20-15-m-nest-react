// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  admin
  user
}
model User {
  id            String           @id @default(uuid())
  name          String
  email         String           @unique
  password      String         
  role          Role             @default(user)
  createdAt     DateTime         @default(now())
  updatedAt     DateTime         @updatedAt
  account       Account?         @relation("UserAccount")  
  paymentMethods PaymentMethod[] @relation("UserPaymentMethods")
  @@map("users")
}

model Account {
  id            String          @id @default(uuid())
  userId        String          @unique
  balance       Float
  currency      String
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  user          User            @relation("UserAccount", fields: [userId], references: [id])  
  transactionsFrom Transaction[] @relation("AccountTransactionsFrom")
  transactionsTo   Transaction[] @relation("AccountTransactionsTo")
  @@map("accounts")
}

model Transaction {
  id            String          @id @default(uuid())
  fromAccountId String
  toAccountId   String
  amount        Float
  currency      String
  status        String
  createdAt     DateTime        @default(now())
  fromAccount   Account         @relation("AccountTransactionsFrom", fields: [fromAccountId], references: [id])
  toAccount     Account         @relation("AccountTransactionsTo", fields: [toAccountId], references: [id])

  @@map("transactions")
}

model PaymentMethod {
  id            String          @id @default(uuid())
  userId        String
  type          String
  provider      String
  accountNumber String
  expiryDate    String
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  user          User            @relation("UserPaymentMethods", fields: [userId], references: [id])

  @@map("payment_methods")
}
